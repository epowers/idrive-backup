#!/usr/bin/env python

import argparse
import os
import pathlib
import sqlite3 as sql
import sys


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('online', type=pathlib.Path)
    parser.add_argument('local', type=pathlib.Path)
    parser.add_argument('-v', '--verbose', action='store_true')
    args = parser.parse_args()
    db_online = args.online
    db_local = args.local
    verbose = args.verbose

    if not os.path.isfile(db_online):
        parser.error(f"the following file path does not exist: online = {db_online}")
        sys.exit(1)
    if not os.path.isfile(db_local):
        parser.error(f"the following file path does not exist: local = {db_local}")
        sys.exit(1)

    db_online_connection = sql.connect(f"file:{db_online}?mode=ro", uri=True)
    db_local_connection = sql.connect(f"file:{db_local}?mode=ro", uri=True)
    db_online_cursor = db_online_connection.cursor()
    db_local_cursor = db_local_connection.cursor()

    last_matched = False
    #db_online_query = '''SELECT ibfolder.NAME, ibfile.NAME, ibfile.FILE_SIZE FROM ibfile INNER JOIN ibfolder ON ibfile.DIRID = ibfolder.DIRID WHERE ibfile.FILE_SIZE > 0'''
    db_online_query = '''SELECT folder, filename, size FROM files WHERE files.size > 0'''
    for folder_name, file_name, size in db_online_cursor.execute(db_online_query):
        if folder_name[-1:] == '/' and not file_name:
            continue
        db_local_query = '''SELECT path FROM DirEnt WHERE size = ? LIMIT 1'''
        matched = db_local_cursor.execute(db_local_query, [size]).fetchone()
        if matched:
            print('.', end='')
            sys.stdout.flush()
        else:
            if last_matched:
                print()
            print(f'{size: 12} {folder_name}{file_name}')
        last_matched = matched
    if last_matched:
        print()


if __name__ == '__main__':
    main()
